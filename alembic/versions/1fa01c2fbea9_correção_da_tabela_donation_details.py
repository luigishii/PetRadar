"""Correção da tabela donation_details

Revision ID: 1fa01c2fbea9
Revises: df2db39a7b9c
Create Date: 2025-03-26 10:57:50.230477

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1fa01c2fbea9'
down_revision: Union[str, None] = 'df2db39a7b9c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('breed_type',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.CheckConstraint("name ~ '^[A-Za-zÀ-ÖØ-öø-ÿ\\s]+$'", name='chk_breed_type_name'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_breed_type_id'), 'breed_type', ['id'], unique=False)
    op.create_table('community_type',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.CheckConstraint("name ~ '^[A-Za-zÀ-ÖØ-öø-ÿ\\s]+$'", name='chk_community_type_name_format'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_community_type_id'), 'community_type', ['id'], unique=False)
    op.create_table('donation_detail',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('donation_type', sa.UUID(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('request_description', sa.Text(), nullable=False),
    sa.Column('donation_link', sa.Text(), nullable=False),
    sa.Column('pix', sa.Text(), nullable=True),
    sa.Column('donation_amount', sa.DECIMAL(), nullable=True),
    sa.Column('donation_item_quantity', sa.Integer(), nullable=True),
    sa.Column('expire_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint("status IN ('PENDING', 'COMPLETED', 'EXPIRED')", name='chk_donation_status'),
    sa.CheckConstraint('donation_amount IS NULL OR donation_amount > 0', name='chk_donation_amount_positive'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_donation_detail_id'), 'donation_detail', ['id'], unique=False)
    op.create_table('donation_type',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_donation_type_id'), 'donation_type', ['id'], unique=False)
    op.create_table('location',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('cep', sa.String(length=10), nullable=True),
    sa.Column('street', sa.String(length=150), nullable=True),
    sa.Column('neighborhood', sa.String(length=80), nullable=True),
    sa.Column('latitude', sa.DECIMAL(precision=9, scale=6), nullable=False),
    sa.Column('longitude', sa.DECIMAL(precision=9, scale=6), nullable=False),
    sa.Column('extra_info', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint("neighborhood IS NULL OR neighborhood ~ '^[A-Za-zÀ-ÖØ-öø-ÿ\\s]+$'", name='chk_neighborhood_valid'),
    sa.CheckConstraint("street IS NULL OR street ~ '^[A-Za-zÀ-ÖØ-öø-ÿ\\s]+$'", name='chk_street_valid'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_location_id'), 'location', ['id'], unique=False)
    op.create_table('network_types',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('type_name', sa.String(length=50), nullable=False),
    sa.CheckConstraint("type_name ~ '^[A-Za-zÀ-ÖØ-öø-ÿ\\s]+$'", name='chk_network_type_name'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_network_types_id'), 'network_types', ['id'], unique=False)
    op.create_table('post_subtype',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.CheckConstraint("name ~ '^[A-Za-zÀ-ÖØ-öø-ÿ\\s]+$'", name='chk_post_subtype_name_format'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_post_subtype_id'), 'post_subtype', ['id'], unique=False)
    op.create_table('post_type',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.CheckConstraint("name ~ '^[A-Za-zÀ-ÖØ-öø-ÿ\\s]+$'", name='chk_post_type_name'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', name='uq_post_type_name')
    )
    op.create_index(op.f('ix_post_type_id'), 'post_type', ['id'], unique=False)
    op.create_table('size_type',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.CheckConstraint("name ~ '^[A-Za-zÀ-ÖØ-öø-ÿ\\s]+$'", name='chk_size_type_name'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_size_type_id'), 'size_type', ['id'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('photo_url', sa.Text(), nullable=True),
    sa.Column('password_hash', sa.Text(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('phone', sa.String(length=15), nullable=False),
    sa.Column('work_phone', sa.String(length=15), nullable=True),
    sa.Column('work_email', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint("email ~ '^[A-Za-z0-9._%%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$'", name='chk_email_format'),
    sa.CheckConstraint("last_name IS NULL OR last_name ~ '^[A-Za-zÀ-ÖØ-öø-ÿ\\s]+$'", name='chk_last_name_format'),
    sa.CheckConstraint("name ~ '^[A-Za-zÀ-ÖØ-öø-ÿ\\s]+$'", name='chk_name_format'),
    sa.CheckConstraint("phone ~ '^\\(\\d{2}\\) \\d{5}-\\d{4}$'", name='chk_phone_format'),
    sa.CheckConstraint("work_email IS NULL OR work_email ~* '^[A-Za-z0-9._%%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$'", name='chk_work_email_format'),
    sa.CheckConstraint("work_phone IS NULL OR work_phone ~ '^\\(\\d{2}\\) \\d{4,5}-\\d{4}$'", name='chk_work_phone_format'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_table('veterinarian_qualification',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.CheckConstraint("name ~ '^[A-Za-zÀ-ÖØ-öø-ÿ\\s]+$'", name='chk_qualification_name_format'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_veterinarian_qualification_id'), 'veterinarian_qualification', ['id'], unique=False)
    op.create_table('veterinarian_specialty',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.CheckConstraint("name ~ '^[A-Za-zÀ-ÖØ-öø-ÿ\\s]+$'", name='chk_specialty_name_format'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_veterinarian_specialty_id'), 'veterinarian_specialty', ['id'], unique=False)
    op.create_table('week_day',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.CheckConstraint("name IN ('Domingo', 'Segunda-feira', 'Terça-feira', 'Quarta-feira', 'Quinta-feira', 'Sexta-feira', 'Sábado')", name='chk_week_day_name'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_week_day_id'), 'week_day', ['id'], unique=False)
    op.create_table('community',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('community_type_id', sa.UUID(), nullable=False),
    sa.Column('location_id', sa.UUID(), nullable=False),
    sa.Column('creator_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['community_type_id'], ['community_type.id'], ),
    sa.ForeignKeyConstraint(['creator_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['location.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_community_id'), 'community', ['id'], unique=False)
    op.create_table('community_user_post',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('post_subtype_id', sa.UUID(), nullable=False),
    sa.Column('community_id', sa.UUID(), nullable=True),
    sa.Column('title', sa.String(length=50), nullable=False),
    sa.Column('body', sa.Text(), nullable=False),
    sa.Column('source_link', sa.Text(), nullable=True),
    sa.Column('additional_link', sa.Text(), nullable=True),
    sa.Column('up_vote_amount', sa.Integer(), nullable=False),
    sa.Column('down_vote_amount', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.CheckConstraint("title ~ '^[A-Za-zÀ-ÖØ-öø-ÿ\\s]+$'", name='chk_title_format'),
    sa.CheckConstraint('down_vote_amount >= 0', name='chk_down_vote_non_negative'),
    sa.CheckConstraint('up_vote_amount >= 0', name='chk_up_vote_non_negative'),
    sa.ForeignKeyConstraint(['community_id'], ['community_type.id'], ),
    sa.ForeignKeyConstraint(['post_subtype_id'], ['post_subtype.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_community_user_post_id'), 'community_user_post', ['id'], unique=False)
    op.create_table('donation_details',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('donation_type', sa.UUID(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('request_description', sa.Text(), nullable=False),
    sa.Column('donation_link', sa.Text(), nullable=False),
    sa.Column('pix', sa.Text(), nullable=True),
    sa.Column('donation_amount', sa.DECIMAL(), nullable=True),
    sa.Column('donation_item_quantity', sa.Integer(), nullable=True),
    sa.Column('expire_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint('donation_amount > 0', name='check_donation_amount_positive'),
    sa.ForeignKeyConstraint(['donation_type'], ['donation_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_donation_details_id'), 'donation_details', ['id'], unique=False)
    op.create_table('ong',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('location_id', sa.UUID(), nullable=False),
    sa.Column('cnpj', sa.String(length=18), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('foundation_date', sa.DateTime(), nullable=True),
    sa.Column('activity_area', sa.String(length=50), nullable=True),
    sa.Column('legal_representative', sa.String(length=50), nullable=True),
    sa.Column('website_url', sa.Text(), nullable=True),
    sa.Column('legal_registration_date', sa.DateTime(), nullable=False),
    sa.Column('status', sa.String(length=10), nullable=False),
    sa.CheckConstraint("cnpj ~ '^\\d{2}\\.\\d{3}\\.\\d{3}/\\d{4}-\\d{2}$'", name='chk_cnpj_format'),
    sa.CheckConstraint("legal_representative IS NULL OR legal_representative ~ '^[A-Za-zÀ-ÖØ-öø-ÿ\\s]+$'", name='chk_legal_rep_name'),
    sa.CheckConstraint("status IN ('ACTIVE', 'INACTIVE')", name='chk_status_valid'),
    sa.CheckConstraint('foundation_date IS NULL OR foundation_date <= NOW()', name='chk_foundation_date'),
    sa.ForeignKeyConstraint(['location_id'], ['location.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ong_id'), 'ong', ['id'], unique=False)
    op.create_table('pet',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('owner_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('pet_type', sa.String(length=50), nullable=False),
    sa.Column('size', sa.String(length=50), nullable=False),
    sa.Column('health_status', sa.String(length=50), nullable=False),
    sa.Column('found_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('breed_type_id', sa.UUID(), nullable=False),
    sa.Column('size_type_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['breed_type_id'], ['breed_type.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['size_type_id'], ['size_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pet_id'), 'pet', ['id'], unique=False)
    op.create_table('post',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('post_type_id', sa.UUID(), nullable=False),
    sa.Column('author_id', sa.UUID(), nullable=False),
    sa.Column('photo_url', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['post_type_id'], ['post_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_post_id'), 'post', ['id'], unique=False)
    op.create_table('social_networks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('network_name', sa.String(length=50), nullable=False),
    sa.Column('network_url', sa.Text(), nullable=False),
    sa.Column('network_type_id', sa.UUID(), nullable=True),
    sa.Column('social_network_owner_id', sa.UUID(), nullable=False),
    sa.CheckConstraint("network_name ~ '^[A-Za-zÀ-ÖØ-öø-ÿ\\s]+$'", name='chk_network_name_format'),
    sa.ForeignKeyConstraint(['network_type_id'], ['network_types.id'], ),
    sa.ForeignKeyConstraint(['social_network_owner_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_social_networks_id'), 'social_networks', ['id'], unique=False)
    op.create_table('veterinarian',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('location_id', sa.UUID(), nullable=False),
    sa.Column('veterinarian_specialty_id', sa.UUID(), nullable=False),
    sa.Column('veterinarian_qualification_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.String(length=15), nullable=False),
    sa.Column('registration_number', sa.String(length=30), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint("status IN ('ACTIVE', 'INACTIVE')", name='chk_vet_status'),
    sa.ForeignKeyConstraint(['location_id'], ['location.id'], ),
    sa.ForeignKeyConstraint(['veterinarian_qualification_id'], ['veterinarian_qualification.id'], ),
    sa.ForeignKeyConstraint(['veterinarian_specialty_id'], ['veterinarian_specialty.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_veterinarian_id'), 'veterinarian', ['id'], unique=False)
    op.create_table('adoption_pet_post',
    sa.Column('post_id', sa.UUID(), nullable=False),
    sa.Column('pet_id', sa.UUID(), nullable=False),
    sa.Column('adoption_reason', sa.String(), nullable=False),
    sa.Column('adoption_requirement', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['pet_id'], ['pet.id'], ),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], ),
    sa.PrimaryKeyConstraint('post_id')
    )
    op.create_table('availability_comment',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('veterinarian_id', sa.UUID(), nullable=False),
    sa.Column('comment_owner_id', sa.UUID(), nullable=False),
    sa.CheckConstraint("description ~ '^[A-Za-zÀ-ÖØ-öø-ÿ\\s]+$'", name='chk_description_format'),
    sa.CheckConstraint("title ~ '^[A-Za-zÀ-ÖØ-öø-ÿ\\s]+$'", name='chk_title_format'),
    sa.ForeignKeyConstraint(['comment_owner_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['veterinarian_id'], ['veterinarian.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_availability_comment_id'), 'availability_comment', ['id'], unique=False)
    op.create_table('availability_period',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=False),
    sa.Column('week_day_id', sa.UUID(), nullable=False),
    sa.Column('veterinarian_id', sa.UUID(), nullable=False),
    sa.CheckConstraint('start_time <= end_time', name='check_start_before_end'),
    sa.ForeignKeyConstraint(['veterinarian_id'], ['veterinarian.id'], ),
    sa.ForeignKeyConstraint(['week_day_id'], ['week_day.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_availability_period_id'), 'availability_period', ['id'], unique=False)
    op.create_table('donation_post',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('donation_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['donation_id'], ['donation_details.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_donation_post_id'), 'donation_post', ['id'], unique=False)
    op.create_table('favorite',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('veterinarian_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['veterinarian_id'], ['veterinarian.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'veterinarian_id', name='uq_favorite_user_vet')
    )
    op.create_index(op.f('ix_favorite_id'), 'favorite', ['id'], unique=False)
    op.create_table('lost_pet_post',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('pet_id', sa.UUID(), nullable=False),
    sa.Column('location_id', sa.UUID(), nullable=False),
    sa.Column('is_found', sa.Boolean(), nullable=False),
    sa.Column('pet_additional_description', sa.String(), nullable=True),
    sa.Column('reward_amount', sa.Integer(), nullable=True),
    sa.CheckConstraint('reward_amount IS NULL OR reward_amount >= 0', name='chk_reward_amount'),
    sa.ForeignKeyConstraint(['location_id'], ['location.id'], ),
    sa.ForeignKeyConstraint(['pet_id'], ['pet.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_lost_pet_post_id'), 'lost_pet_post', ['id'], unique=False)
    op.create_table('pet_photo',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('photo_url', sa.Text(), nullable=False),
    sa.Column('pet_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['pet_id'], ['pet.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('pet_id', 'photo_url', name='uq_pet_photo_url_per_pet')
    )
    op.create_index(op.f('ix_pet_photo_id'), 'pet_photo', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_pet_photo_id'), table_name='pet_photo')
    op.drop_table('pet_photo')
    op.drop_index(op.f('ix_lost_pet_post_id'), table_name='lost_pet_post')
    op.drop_table('lost_pet_post')
    op.drop_index(op.f('ix_favorite_id'), table_name='favorite')
    op.drop_table('favorite')
    op.drop_index(op.f('ix_donation_post_id'), table_name='donation_post')
    op.drop_table('donation_post')
    op.drop_index(op.f('ix_availability_period_id'), table_name='availability_period')
    op.drop_table('availability_period')
    op.drop_index(op.f('ix_availability_comment_id'), table_name='availability_comment')
    op.drop_table('availability_comment')
    op.drop_table('adoption_pet_post')
    op.drop_index(op.f('ix_veterinarian_id'), table_name='veterinarian')
    op.drop_table('veterinarian')
    op.drop_index(op.f('ix_social_networks_id'), table_name='social_networks')
    op.drop_table('social_networks')
    op.drop_index(op.f('ix_post_id'), table_name='post')
    op.drop_table('post')
    op.drop_index(op.f('ix_pet_id'), table_name='pet')
    op.drop_table('pet')
    op.drop_index(op.f('ix_ong_id'), table_name='ong')
    op.drop_table('ong')
    op.drop_index(op.f('ix_donation_details_id'), table_name='donation_details')
    op.drop_table('donation_details')
    op.drop_index(op.f('ix_community_user_post_id'), table_name='community_user_post')
    op.drop_table('community_user_post')
    op.drop_index(op.f('ix_community_id'), table_name='community')
    op.drop_table('community')
    op.drop_index(op.f('ix_week_day_id'), table_name='week_day')
    op.drop_table('week_day')
    op.drop_index(op.f('ix_veterinarian_specialty_id'), table_name='veterinarian_specialty')
    op.drop_table('veterinarian_specialty')
    op.drop_index(op.f('ix_veterinarian_qualification_id'), table_name='veterinarian_qualification')
    op.drop_table('veterinarian_qualification')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_size_type_id'), table_name='size_type')
    op.drop_table('size_type')
    op.drop_index(op.f('ix_post_type_id'), table_name='post_type')
    op.drop_table('post_type')
    op.drop_index(op.f('ix_post_subtype_id'), table_name='post_subtype')
    op.drop_table('post_subtype')
    op.drop_index(op.f('ix_network_types_id'), table_name='network_types')
    op.drop_table('network_types')
    op.drop_index(op.f('ix_location_id'), table_name='location')
    op.drop_table('location')
    op.drop_index(op.f('ix_donation_type_id'), table_name='donation_type')
    op.drop_table('donation_type')
    op.drop_index(op.f('ix_donation_detail_id'), table_name='donation_detail')
    op.drop_table('donation_detail')
    op.drop_index(op.f('ix_community_type_id'), table_name='community_type')
    op.drop_table('community_type')
    op.drop_index(op.f('ix_breed_type_id'), table_name='breed_type')
    op.drop_table('breed_type')
    # ### end Alembic commands ###
